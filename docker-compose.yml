# Задаём имя проекта
name: read-city

services:
  web:
    # Указываем директорию ./app, в которой содержится Dockerfile для сборки образа
    build: ./ReadCity
    # Запускаем встроенный сервер Django
    command: python manage.py runserver 0.0.0.0:8000
    # Пробрасываем 8000 порт контейнера на 8000 порт локалхоста(127.0.0.1:8000)
    ports:
      - 127.0.0.1:8000:8000
    # Файл содержащий переменные окружения для контейнера
    env_file:
      - .env

  db:
    image: postgres:15
    # Примонтируем том postgres-data к директории /var/lib/postgresql/data контейнера db
    volumes:
      - ./read_city_data.sql:/docker-entrypoint-initdb.d/read_city_data.sql
      - postgres-data:/var/lib/postgresql/data
    # Файл содержащий переменные окружения для контейнера
    env_file:
      - .env
    # Используем значения переменных окружения из .env файла
    environment:
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_DB=${SQL_DATABASE}

  memcached:
    image: memcached:1.6.21
    command: memcached -m 64 -I 5m

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    command: redis-server

  celery:
    build: ./ReadCity
    command: celery -A ReadCity worker --loglevel=info
    depends_on:
      - db
      - redis
    env_file:
      - .env


  celery-beat:
    build: ./ReadCity
    command: celery -A ReadCity beat
    depends_on:
      - db
      - redis
      - celery
    env_file:
      - .env

volumes:
  # Объявляем том postgres-data для хранения данных PostgreSQL
  postgres-data: