"""
Django settings for ReadCity project.

Generated by 'django-admin startproject' using Django 4.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
from dotenv import load_dotenv
import os
load_dotenv()

from pathlib import Path

from django.conf.global_settings import MEDIA_URL
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-3=qco#w&8+#1#y9ru2-bya1mzr@4%2w&e3qi3k!ty(eg6@_7zu'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True


INSTALLED_APPS = [
    "debug_toolbar",
    'rosetta',
    'main',
    'djoser',
    'modeltranslation',
    'guardian',
    'rest_framework.authtoken',
    'rest_framework',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
# INTERNAL_IPS = [
#     "127.0.0.1",
#
# ]
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend', # бэкенд Django по умолчанию
    'guardian.backends.ObjectPermissionBackend', # бэкенд django_guardian
)
MIDDLEWARE = [
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ReadCity.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ReadCity.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# DATABASES = {
#
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'readcityapp',
#         'USER': 'postgres',
#         'PASSWORD': 'p0st+',
#         'HOST': 'localhost',
#         'PORT': '5432',
#
#     }
#
# }
DATABASES = {
    'default': {
        'ENGINE': os.getenv('SQL_ENGINE', 'django.db.backends.postgresql'),
        'NAME': os.getenv('SQL_DATABASE', 'readcityapp'),
        'USER': os.getenv('SQL_USER', 'postgres'),
        'PASSWORD': os.getenv('SQL_PASSWORD', 'p0st+'),
        'HOST': os.getenv('SQL_HOST', 'localhost'),
        'PORT': os.getenv('SQL_PORT', '5432'),
    }
}
# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/


# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.memcached.PyMemcacheCache',
#         'LOCATION': '127.0.0.1:11211',
#     }
# }




LANGUAGES = [
    ('ru', _('Russian')),
    ('en', _('English')),
]
LOCALE_PATHS = [
    BASE_DIR / 'locale',
]
MODELTRANSLATION_DEFAULT_LANGUAGE = 'ru'
MODELTRANSLATION_TRANSLATION_REGISTRY = 'main.translation'
LANGUAGE_CODE = 'ru-RU'
TRANSLATABLE_MODEL_MODULES = ['main.models']

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = 'main'


AUTH_USER_MODEL = 'main.User'
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 5,
    "DEFAULT_RENDERER_CLASSES": [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
}

# CACHES = {
#     # a cache alias or name. In this case, we use "default" as the alias.
#     "default": {
#         # Here, we're using the in-memory cache backend.
#         "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
#
#         # LOCATION parameter gives a unique name or identifier to this cache instance.
#         "LOCATION": "unique-snowflake",
#     }
# }

# EMAIL_USE_TLS = True
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_HOST_USER = 'readcity.app@gmail.com'
# EMAIL_HOST_PASSWORD =""
# EMAIL_PORT = 587


# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = "readcity.app@gmail.com"
EMAIL_HOST_PASSWORD = "efli sdbq bgmq ianz"  #(read-c'ty-0pp)


MEDIA_ROOT = BASE_DIR / "main/static/img"
MEDIA_URL = '/img/'

# ALLOWED_HOSTS = 'localhost:8000'
# REDIS_HOST = '127.0.0.1'
# REDIS_PORT = '6379'
# BROKER_URL = 'redis://' + REDIS_HOST + ':' + REDIS_PORT + '/0'
# BROKER_TRANSPORT_OPTIONS = {'visibility_timeout': 3600}
# CELERY_RESULT_BACKEND = 'redis://' + REDIS_HOST + ':' + REDIS_PORT + '/0'

REDIS_HOST = os.getenv("REDIS_HOST")  # имя сервиса в docker-compose
REDIS_PORT = os.getenv("REDIS_PORT")
BROKER_URL = f'redis://{REDIS_HOST}:{REDIS_PORT}/0'
CELERY_RESULT_BACKEND = BROKER_URL

# DOCKER
SECRET_KEY = os.getenv('SECRET_KEY')

DEBUG = os.getenv('DEBUG', 'False') == 'True'

ALLOWED_HOSTS = os.getenv('DJANGO_ALLOWED_HOSTS', '').split(',')

CACHES = {
    'default': {
        'BACKEND': os.getenv('CACHES_BACKEND'),
        'LOCATION': os.getenv('CACHES_LOCATION'),
    }
}

INTERNAL_IPS = os.getenv('INTERNAL_IPS').split(' ')
CSRF_TRUSTED_ORIGINS = os.getenv('CSRF_TRUSTED_ORIGINS', '').split(' ')

SITE_DOMAIN = os.getenv('SITE_DOMAIN')